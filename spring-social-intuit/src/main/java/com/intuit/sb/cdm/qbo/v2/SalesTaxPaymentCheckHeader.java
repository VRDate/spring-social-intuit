//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.2-hudson-jaxb-ri-2.2-63- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.05.12 at 06:01:42 PM PDT 
//


package com.intuit.sb.cdm.qbo.v2;

import java.io.Serializable;
import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Information that pertains to the entire SalesTaxPaymentCheck
 * 
 * <p>Java class for SalesTaxPaymentCheckHeader complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SalesTaxPaymentCheckHeader">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.intuit.com/sb/cdm/v2}HeaderBase">
 *       &lt;sequence>
 *         &lt;group ref="{http://www.intuit.com/sb/cdm/v2}VendorReferenceGroup" minOccurs="0"/>
 *         &lt;group ref="{http://www.intuit.com/sb/cdm/v2}PaymentCheckGroup" minOccurs="0"/>
 *         &lt;element name="TotalAmt" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SalesTaxPaymentCheckHeader", propOrder = {
    "vendorId",
    "vendorName",
    "bankAccountId",
    "bankAccountName",
    "toBePrinted",
    "checkDetail",
    "payeeAddr",
    "totalAmt"
})
public class SalesTaxPaymentCheckHeader
    extends HeaderBase
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "VendorId")
    protected IdType vendorId;
    @XmlElement(name = "VendorName")
    protected String vendorName;
    @XmlElement(name = "BankAccountId")
    protected IdType bankAccountId;
    @XmlElement(name = "BankAccountName")
    protected String bankAccountName;
    @XmlElement(name = "ToBePrinted")
    protected Boolean toBePrinted;
    @XmlElement(name = "CheckDetail")
    protected CheckPayment checkDetail;
    @XmlElement(name = "PayeeAddr")
    protected PhysicalAddress payeeAddr;
    @XmlElement(name = "TotalAmt")
    protected BigDecimal totalAmt;

    /**
     * Gets the value of the vendorId property.
     * 
     * @return
     *     possible object is
     *     {@link IdType }
     *     
     */
    public IdType getVendorId() {
        return vendorId;
    }

    /**
     * Sets the value of the vendorId property.
     * 
     * @param value
     *     allowed object is
     *     {@link IdType }
     *     
     */
    public void setVendorId(IdType value) {
        this.vendorId = value;
    }

    /**
     * Gets the value of the vendorName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVendorName() {
        return vendorName;
    }

    /**
     * Sets the value of the vendorName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVendorName(String value) {
        this.vendorName = value;
    }

    /**
     * Gets the value of the bankAccountId property.
     * 
     * @return
     *     possible object is
     *     {@link IdType }
     *     
     */
    public IdType getBankAccountId() {
        return bankAccountId;
    }

    /**
     * Sets the value of the bankAccountId property.
     * 
     * @param value
     *     allowed object is
     *     {@link IdType }
     *     
     */
    public void setBankAccountId(IdType value) {
        this.bankAccountId = value;
    }

    /**
     * Gets the value of the bankAccountName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBankAccountName() {
        return bankAccountName;
    }

    /**
     * Sets the value of the bankAccountName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBankAccountName(String value) {
        this.bankAccountName = value;
    }

    /**
     * Gets the value of the toBePrinted property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isToBePrinted() {
        return toBePrinted;
    }

    /**
     * Sets the value of the toBePrinted property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setToBePrinted(Boolean value) {
        this.toBePrinted = value;
    }

    /**
     * Gets the value of the checkDetail property.
     * 
     * @return
     *     possible object is
     *     {@link CheckPayment }
     *     
     */
    public CheckPayment getCheckDetail() {
        return checkDetail;
    }

    /**
     * Sets the value of the checkDetail property.
     * 
     * @param value
     *     allowed object is
     *     {@link CheckPayment }
     *     
     */
    public void setCheckDetail(CheckPayment value) {
        this.checkDetail = value;
    }

    /**
     * Gets the value of the payeeAddr property.
     * 
     * @return
     *     possible object is
     *     {@link PhysicalAddress }
     *     
     */
    public PhysicalAddress getPayeeAddr() {
        return payeeAddr;
    }

    /**
     * Sets the value of the payeeAddr property.
     * 
     * @param value
     *     allowed object is
     *     {@link PhysicalAddress }
     *     
     */
    public void setPayeeAddr(PhysicalAddress value) {
        this.payeeAddr = value;
    }

    /**
     * Gets the value of the totalAmt property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getTotalAmt() {
        return totalAmt;
    }

    /**
     * Sets the value of the totalAmt property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTotalAmt(BigDecimal value) {
        this.totalAmt = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof SalesTaxPaymentCheckHeader)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final SalesTaxPaymentCheckHeader that = ((SalesTaxPaymentCheckHeader) object);
        {
            IdType lhsVendorId;
            lhsVendorId = this.getVendorId();
            IdType rhsVendorId;
            rhsVendorId = that.getVendorId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "vendorId", lhsVendorId), LocatorUtils.property(thatLocator, "vendorId", rhsVendorId), lhsVendorId, rhsVendorId)) {
                return false;
            }
        }
        {
            String lhsVendorName;
            lhsVendorName = this.getVendorName();
            String rhsVendorName;
            rhsVendorName = that.getVendorName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "vendorName", lhsVendorName), LocatorUtils.property(thatLocator, "vendorName", rhsVendorName), lhsVendorName, rhsVendorName)) {
                return false;
            }
        }
        {
            IdType lhsBankAccountId;
            lhsBankAccountId = this.getBankAccountId();
            IdType rhsBankAccountId;
            rhsBankAccountId = that.getBankAccountId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bankAccountId", lhsBankAccountId), LocatorUtils.property(thatLocator, "bankAccountId", rhsBankAccountId), lhsBankAccountId, rhsBankAccountId)) {
                return false;
            }
        }
        {
            String lhsBankAccountName;
            lhsBankAccountName = this.getBankAccountName();
            String rhsBankAccountName;
            rhsBankAccountName = that.getBankAccountName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bankAccountName", lhsBankAccountName), LocatorUtils.property(thatLocator, "bankAccountName", rhsBankAccountName), lhsBankAccountName, rhsBankAccountName)) {
                return false;
            }
        }
        {
            Boolean lhsToBePrinted;
            lhsToBePrinted = this.isToBePrinted();
            Boolean rhsToBePrinted;
            rhsToBePrinted = that.isToBePrinted();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "toBePrinted", lhsToBePrinted), LocatorUtils.property(thatLocator, "toBePrinted", rhsToBePrinted), lhsToBePrinted, rhsToBePrinted)) {
                return false;
            }
        }
        {
            CheckPayment lhsCheckDetail;
            lhsCheckDetail = this.getCheckDetail();
            CheckPayment rhsCheckDetail;
            rhsCheckDetail = that.getCheckDetail();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "checkDetail", lhsCheckDetail), LocatorUtils.property(thatLocator, "checkDetail", rhsCheckDetail), lhsCheckDetail, rhsCheckDetail)) {
                return false;
            }
        }
        {
            PhysicalAddress lhsPayeeAddr;
            lhsPayeeAddr = this.getPayeeAddr();
            PhysicalAddress rhsPayeeAddr;
            rhsPayeeAddr = that.getPayeeAddr();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "payeeAddr", lhsPayeeAddr), LocatorUtils.property(thatLocator, "payeeAddr", rhsPayeeAddr), lhsPayeeAddr, rhsPayeeAddr)) {
                return false;
            }
        }
        {
            BigDecimal lhsTotalAmt;
            lhsTotalAmt = this.getTotalAmt();
            BigDecimal rhsTotalAmt;
            rhsTotalAmt = that.getTotalAmt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "totalAmt", lhsTotalAmt), LocatorUtils.property(thatLocator, "totalAmt", rhsTotalAmt), lhsTotalAmt, rhsTotalAmt)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            IdType theVendorId;
            theVendorId = this.getVendorId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "vendorId", theVendorId), currentHashCode, theVendorId);
        }
        {
            String theVendorName;
            theVendorName = this.getVendorName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "vendorName", theVendorName), currentHashCode, theVendorName);
        }
        {
            IdType theBankAccountId;
            theBankAccountId = this.getBankAccountId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bankAccountId", theBankAccountId), currentHashCode, theBankAccountId);
        }
        {
            String theBankAccountName;
            theBankAccountName = this.getBankAccountName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bankAccountName", theBankAccountName), currentHashCode, theBankAccountName);
        }
        {
            Boolean theToBePrinted;
            theToBePrinted = this.isToBePrinted();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "toBePrinted", theToBePrinted), currentHashCode, theToBePrinted);
        }
        {
            CheckPayment theCheckDetail;
            theCheckDetail = this.getCheckDetail();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "checkDetail", theCheckDetail), currentHashCode, theCheckDetail);
        }
        {
            PhysicalAddress thePayeeAddr;
            thePayeeAddr = this.getPayeeAddr();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "payeeAddr", thePayeeAddr), currentHashCode, thePayeeAddr);
        }
        {
            BigDecimal theTotalAmt;
            theTotalAmt = this.getTotalAmt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "totalAmt", theTotalAmt), currentHashCode, theTotalAmt);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
