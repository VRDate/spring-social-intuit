//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.2-hudson-jaxb-ri-2.2-63- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.05.12 at 06:01:42 PM PDT 
//


package com.intuit.sb.cdm.qbo.v2;

import java.io.Serializable;
import java.util.Calendar;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Financial Transaction information that pertains to the entire PurchaseOrder.
 * 
 * <p>Java class for PurchaseOrderHeader complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PurchaseOrderHeader">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.intuit.com/sb/cdm/v2}HeaderPurchase">
 *       &lt;sequence>
 *         &lt;group ref="{http://www.intuit.com/sb/cdm/v2}ClassReferenceGroup" minOccurs="0"/>
 *         &lt;group ref="{http://www.intuit.com/sb/cdm/v2}SalesTermReferenceGroup" minOccurs="0"/>
 *         &lt;element name="DueDate" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/>
 *         &lt;element name="ExpectedDate" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/>
 *         &lt;element name="RemitToAddr" type="{http://www.intuit.com/sb/cdm/v2}PhysicalAddress" minOccurs="0"/>
 *         &lt;choice minOccurs="0">
 *           &lt;element name="DropShipToCustomer" type="{http://www.intuit.com/sb/cdm/v2}CustomerRef" minOccurs="0"/>
 *           &lt;element name="DropShipToVendor" type="{http://www.intuit.com/sb/cdm/v2}VendorRef" minOccurs="0"/>
 *           &lt;element name="DropShipToEmployee" type="{http://www.intuit.com/sb/cdm/v2}EmployeeRef" minOccurs="0"/>
 *           &lt;element name="DropShipToOtherName" type="{http://www.intuit.com/sb/cdm/v2}OtherNameRef" minOccurs="0"/>
 *         &lt;/choice>
 *         &lt;element name="ShipAddr" type="{http://www.intuit.com/sb/cdm/v2}PhysicalAddress" minOccurs="0"/>
 *         &lt;group ref="{http://www.intuit.com/sb/cdm/v2}ShipMethodReferenceGroup" minOccurs="0"/>
 *         &lt;element name="FOB" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="POEmail" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="ToBePrinted" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="ToBeEmailed" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="Custom1" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="Custom2" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PurchaseOrderHeader", propOrder = {
    "classId",
    "className",
    "salesTermId",
    "salesTermName",
    "dueDate",
    "expectedDate",
    "remitToAddr",
    "dropShipToCustomer",
    "dropShipToVendor",
    "dropShipToEmployee",
    "dropShipToOtherName",
    "shipAddr",
    "shipMethodId",
    "shipMethodName",
    "fob",
    "poEmail",
    "toBePrinted",
    "toBeEmailed",
    "custom1",
    "custom2"
})
public class PurchaseOrderHeader
    extends HeaderPurchase
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "ClassId")
    protected IdType classId;
    @XmlElement(name = "ClassName")
    protected String className;
    @XmlElement(name = "SalesTermId")
    protected IdType salesTermId;
    @XmlElement(name = "SalesTermName")
    protected String salesTermName;
    @XmlElement(name = "DueDate", type = String.class)
    @XmlJavaTypeAdapter(Adapter2 .class)
    @XmlSchemaType(name = "date")
    protected Calendar dueDate;
    @XmlElement(name = "ExpectedDate", type = String.class)
    @XmlJavaTypeAdapter(Adapter2 .class)
    @XmlSchemaType(name = "date")
    protected Calendar expectedDate;
    @XmlElement(name = "RemitToAddr")
    protected PhysicalAddress remitToAddr;
    @XmlElement(name = "DropShipToCustomer")
    protected CustomerRef dropShipToCustomer;
    @XmlElement(name = "DropShipToVendor")
    protected VendorRef dropShipToVendor;
    @XmlElement(name = "DropShipToEmployee")
    protected EmployeeRef dropShipToEmployee;
    @XmlElement(name = "DropShipToOtherName")
    protected OtherNameRef dropShipToOtherName;
    @XmlElement(name = "ShipAddr")
    protected PhysicalAddress shipAddr;
    @XmlElement(name = "ShipMethodId")
    protected IdType shipMethodId;
    @XmlElement(name = "ShipMethodName")
    protected String shipMethodName;
    @XmlElement(name = "FOB")
    protected String fob;
    @XmlElement(name = "POEmail")
    protected String poEmail;
    @XmlElement(name = "ToBePrinted")
    protected Boolean toBePrinted;
    @XmlElement(name = "ToBeEmailed")
    protected Boolean toBeEmailed;
    @XmlElement(name = "Custom1")
    protected String custom1;
    @XmlElement(name = "Custom2")
    protected String custom2;

    /**
     * Gets the value of the classId property.
     * 
     * @return
     *     possible object is
     *     {@link IdType }
     *     
     */
    public IdType getClassId() {
        return classId;
    }

    /**
     * Sets the value of the classId property.
     * 
     * @param value
     *     allowed object is
     *     {@link IdType }
     *     
     */
    public void setClassId(IdType value) {
        this.classId = value;
    }

    /**
     * Gets the value of the className property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getClassName() {
        return className;
    }

    /**
     * Sets the value of the className property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setClassName(String value) {
        this.className = value;
    }

    /**
     * Gets the value of the salesTermId property.
     * 
     * @return
     *     possible object is
     *     {@link IdType }
     *     
     */
    public IdType getSalesTermId() {
        return salesTermId;
    }

    /**
     * Sets the value of the salesTermId property.
     * 
     * @param value
     *     allowed object is
     *     {@link IdType }
     *     
     */
    public void setSalesTermId(IdType value) {
        this.salesTermId = value;
    }

    /**
     * Gets the value of the salesTermName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSalesTermName() {
        return salesTermName;
    }

    /**
     * Sets the value of the salesTermName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSalesTermName(String value) {
        this.salesTermName = value;
    }

    /**
     * Gets the value of the dueDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Calendar getDueDate() {
        return dueDate;
    }

    /**
     * Sets the value of the dueDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDueDate(Calendar value) {
        this.dueDate = value;
    }

    /**
     * Gets the value of the expectedDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Calendar getExpectedDate() {
        return expectedDate;
    }

    /**
     * Sets the value of the expectedDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExpectedDate(Calendar value) {
        this.expectedDate = value;
    }

    /**
     * Gets the value of the remitToAddr property.
     * 
     * @return
     *     possible object is
     *     {@link PhysicalAddress }
     *     
     */
    public PhysicalAddress getRemitToAddr() {
        return remitToAddr;
    }

    /**
     * Sets the value of the remitToAddr property.
     * 
     * @param value
     *     allowed object is
     *     {@link PhysicalAddress }
     *     
     */
    public void setRemitToAddr(PhysicalAddress value) {
        this.remitToAddr = value;
    }

    /**
     * Gets the value of the dropShipToCustomer property.
     * 
     * @return
     *     possible object is
     *     {@link CustomerRef }
     *     
     */
    public CustomerRef getDropShipToCustomer() {
        return dropShipToCustomer;
    }

    /**
     * Sets the value of the dropShipToCustomer property.
     * 
     * @param value
     *     allowed object is
     *     {@link CustomerRef }
     *     
     */
    public void setDropShipToCustomer(CustomerRef value) {
        this.dropShipToCustomer = value;
    }

    /**
     * Gets the value of the dropShipToVendor property.
     * 
     * @return
     *     possible object is
     *     {@link VendorRef }
     *     
     */
    public VendorRef getDropShipToVendor() {
        return dropShipToVendor;
    }

    /**
     * Sets the value of the dropShipToVendor property.
     * 
     * @param value
     *     allowed object is
     *     {@link VendorRef }
     *     
     */
    public void setDropShipToVendor(VendorRef value) {
        this.dropShipToVendor = value;
    }

    /**
     * Gets the value of the dropShipToEmployee property.
     * 
     * @return
     *     possible object is
     *     {@link EmployeeRef }
     *     
     */
    public EmployeeRef getDropShipToEmployee() {
        return dropShipToEmployee;
    }

    /**
     * Sets the value of the dropShipToEmployee property.
     * 
     * @param value
     *     allowed object is
     *     {@link EmployeeRef }
     *     
     */
    public void setDropShipToEmployee(EmployeeRef value) {
        this.dropShipToEmployee = value;
    }

    /**
     * Gets the value of the dropShipToOtherName property.
     * 
     * @return
     *     possible object is
     *     {@link OtherNameRef }
     *     
     */
    public OtherNameRef getDropShipToOtherName() {
        return dropShipToOtherName;
    }

    /**
     * Sets the value of the dropShipToOtherName property.
     * 
     * @param value
     *     allowed object is
     *     {@link OtherNameRef }
     *     
     */
    public void setDropShipToOtherName(OtherNameRef value) {
        this.dropShipToOtherName = value;
    }

    /**
     * Gets the value of the shipAddr property.
     * 
     * @return
     *     possible object is
     *     {@link PhysicalAddress }
     *     
     */
    public PhysicalAddress getShipAddr() {
        return shipAddr;
    }

    /**
     * Sets the value of the shipAddr property.
     * 
     * @param value
     *     allowed object is
     *     {@link PhysicalAddress }
     *     
     */
    public void setShipAddr(PhysicalAddress value) {
        this.shipAddr = value;
    }

    /**
     * Gets the value of the shipMethodId property.
     * 
     * @return
     *     possible object is
     *     {@link IdType }
     *     
     */
    public IdType getShipMethodId() {
        return shipMethodId;
    }

    /**
     * Sets the value of the shipMethodId property.
     * 
     * @param value
     *     allowed object is
     *     {@link IdType }
     *     
     */
    public void setShipMethodId(IdType value) {
        this.shipMethodId = value;
    }

    /**
     * Gets the value of the shipMethodName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getShipMethodName() {
        return shipMethodName;
    }

    /**
     * Sets the value of the shipMethodName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setShipMethodName(String value) {
        this.shipMethodName = value;
    }

    /**
     * Gets the value of the fob property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFOB() {
        return fob;
    }

    /**
     * Sets the value of the fob property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFOB(String value) {
        this.fob = value;
    }

    /**
     * Gets the value of the poEmail property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPOEmail() {
        return poEmail;
    }

    /**
     * Sets the value of the poEmail property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPOEmail(String value) {
        this.poEmail = value;
    }

    /**
     * Gets the value of the toBePrinted property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isToBePrinted() {
        return toBePrinted;
    }

    /**
     * Sets the value of the toBePrinted property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setToBePrinted(Boolean value) {
        this.toBePrinted = value;
    }

    /**
     * Gets the value of the toBeEmailed property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isToBeEmailed() {
        return toBeEmailed;
    }

    /**
     * Sets the value of the toBeEmailed property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setToBeEmailed(Boolean value) {
        this.toBeEmailed = value;
    }

    /**
     * Gets the value of the custom1 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCustom1() {
        return custom1;
    }

    /**
     * Sets the value of the custom1 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCustom1(String value) {
        this.custom1 = value;
    }

    /**
     * Gets the value of the custom2 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCustom2() {
        return custom2;
    }

    /**
     * Sets the value of the custom2 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCustom2(String value) {
        this.custom2 = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof PurchaseOrderHeader)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final PurchaseOrderHeader that = ((PurchaseOrderHeader) object);
        {
            IdType lhsClassId;
            lhsClassId = this.getClassId();
            IdType rhsClassId;
            rhsClassId = that.getClassId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "classId", lhsClassId), LocatorUtils.property(thatLocator, "classId", rhsClassId), lhsClassId, rhsClassId)) {
                return false;
            }
        }
        {
            String lhsClassName;
            lhsClassName = this.getClassName();
            String rhsClassName;
            rhsClassName = that.getClassName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "className", lhsClassName), LocatorUtils.property(thatLocator, "className", rhsClassName), lhsClassName, rhsClassName)) {
                return false;
            }
        }
        {
            IdType lhsSalesTermId;
            lhsSalesTermId = this.getSalesTermId();
            IdType rhsSalesTermId;
            rhsSalesTermId = that.getSalesTermId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "salesTermId", lhsSalesTermId), LocatorUtils.property(thatLocator, "salesTermId", rhsSalesTermId), lhsSalesTermId, rhsSalesTermId)) {
                return false;
            }
        }
        {
            String lhsSalesTermName;
            lhsSalesTermName = this.getSalesTermName();
            String rhsSalesTermName;
            rhsSalesTermName = that.getSalesTermName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "salesTermName", lhsSalesTermName), LocatorUtils.property(thatLocator, "salesTermName", rhsSalesTermName), lhsSalesTermName, rhsSalesTermName)) {
                return false;
            }
        }
        {
            Calendar lhsDueDate;
            lhsDueDate = this.getDueDate();
            Calendar rhsDueDate;
            rhsDueDate = that.getDueDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dueDate", lhsDueDate), LocatorUtils.property(thatLocator, "dueDate", rhsDueDate), lhsDueDate, rhsDueDate)) {
                return false;
            }
        }
        {
            Calendar lhsExpectedDate;
            lhsExpectedDate = this.getExpectedDate();
            Calendar rhsExpectedDate;
            rhsExpectedDate = that.getExpectedDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "expectedDate", lhsExpectedDate), LocatorUtils.property(thatLocator, "expectedDate", rhsExpectedDate), lhsExpectedDate, rhsExpectedDate)) {
                return false;
            }
        }
        {
            PhysicalAddress lhsRemitToAddr;
            lhsRemitToAddr = this.getRemitToAddr();
            PhysicalAddress rhsRemitToAddr;
            rhsRemitToAddr = that.getRemitToAddr();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "remitToAddr", lhsRemitToAddr), LocatorUtils.property(thatLocator, "remitToAddr", rhsRemitToAddr), lhsRemitToAddr, rhsRemitToAddr)) {
                return false;
            }
        }
        {
            CustomerRef lhsDropShipToCustomer;
            lhsDropShipToCustomer = this.getDropShipToCustomer();
            CustomerRef rhsDropShipToCustomer;
            rhsDropShipToCustomer = that.getDropShipToCustomer();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dropShipToCustomer", lhsDropShipToCustomer), LocatorUtils.property(thatLocator, "dropShipToCustomer", rhsDropShipToCustomer), lhsDropShipToCustomer, rhsDropShipToCustomer)) {
                return false;
            }
        }
        {
            VendorRef lhsDropShipToVendor;
            lhsDropShipToVendor = this.getDropShipToVendor();
            VendorRef rhsDropShipToVendor;
            rhsDropShipToVendor = that.getDropShipToVendor();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dropShipToVendor", lhsDropShipToVendor), LocatorUtils.property(thatLocator, "dropShipToVendor", rhsDropShipToVendor), lhsDropShipToVendor, rhsDropShipToVendor)) {
                return false;
            }
        }
        {
            EmployeeRef lhsDropShipToEmployee;
            lhsDropShipToEmployee = this.getDropShipToEmployee();
            EmployeeRef rhsDropShipToEmployee;
            rhsDropShipToEmployee = that.getDropShipToEmployee();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dropShipToEmployee", lhsDropShipToEmployee), LocatorUtils.property(thatLocator, "dropShipToEmployee", rhsDropShipToEmployee), lhsDropShipToEmployee, rhsDropShipToEmployee)) {
                return false;
            }
        }
        {
            OtherNameRef lhsDropShipToOtherName;
            lhsDropShipToOtherName = this.getDropShipToOtherName();
            OtherNameRef rhsDropShipToOtherName;
            rhsDropShipToOtherName = that.getDropShipToOtherName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dropShipToOtherName", lhsDropShipToOtherName), LocatorUtils.property(thatLocator, "dropShipToOtherName", rhsDropShipToOtherName), lhsDropShipToOtherName, rhsDropShipToOtherName)) {
                return false;
            }
        }
        {
            PhysicalAddress lhsShipAddr;
            lhsShipAddr = this.getShipAddr();
            PhysicalAddress rhsShipAddr;
            rhsShipAddr = that.getShipAddr();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shipAddr", lhsShipAddr), LocatorUtils.property(thatLocator, "shipAddr", rhsShipAddr), lhsShipAddr, rhsShipAddr)) {
                return false;
            }
        }
        {
            IdType lhsShipMethodId;
            lhsShipMethodId = this.getShipMethodId();
            IdType rhsShipMethodId;
            rhsShipMethodId = that.getShipMethodId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shipMethodId", lhsShipMethodId), LocatorUtils.property(thatLocator, "shipMethodId", rhsShipMethodId), lhsShipMethodId, rhsShipMethodId)) {
                return false;
            }
        }
        {
            String lhsShipMethodName;
            lhsShipMethodName = this.getShipMethodName();
            String rhsShipMethodName;
            rhsShipMethodName = that.getShipMethodName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shipMethodName", lhsShipMethodName), LocatorUtils.property(thatLocator, "shipMethodName", rhsShipMethodName), lhsShipMethodName, rhsShipMethodName)) {
                return false;
            }
        }
        {
            String lhsFOB;
            lhsFOB = this.getFOB();
            String rhsFOB;
            rhsFOB = that.getFOB();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fob", lhsFOB), LocatorUtils.property(thatLocator, "fob", rhsFOB), lhsFOB, rhsFOB)) {
                return false;
            }
        }
        {
            String lhsPOEmail;
            lhsPOEmail = this.getPOEmail();
            String rhsPOEmail;
            rhsPOEmail = that.getPOEmail();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "poEmail", lhsPOEmail), LocatorUtils.property(thatLocator, "poEmail", rhsPOEmail), lhsPOEmail, rhsPOEmail)) {
                return false;
            }
        }
        {
            Boolean lhsToBePrinted;
            lhsToBePrinted = this.isToBePrinted();
            Boolean rhsToBePrinted;
            rhsToBePrinted = that.isToBePrinted();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "toBePrinted", lhsToBePrinted), LocatorUtils.property(thatLocator, "toBePrinted", rhsToBePrinted), lhsToBePrinted, rhsToBePrinted)) {
                return false;
            }
        }
        {
            Boolean lhsToBeEmailed;
            lhsToBeEmailed = this.isToBeEmailed();
            Boolean rhsToBeEmailed;
            rhsToBeEmailed = that.isToBeEmailed();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "toBeEmailed", lhsToBeEmailed), LocatorUtils.property(thatLocator, "toBeEmailed", rhsToBeEmailed), lhsToBeEmailed, rhsToBeEmailed)) {
                return false;
            }
        }
        {
            String lhsCustom1;
            lhsCustom1 = this.getCustom1();
            String rhsCustom1;
            rhsCustom1 = that.getCustom1();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "custom1", lhsCustom1), LocatorUtils.property(thatLocator, "custom1", rhsCustom1), lhsCustom1, rhsCustom1)) {
                return false;
            }
        }
        {
            String lhsCustom2;
            lhsCustom2 = this.getCustom2();
            String rhsCustom2;
            rhsCustom2 = that.getCustom2();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "custom2", lhsCustom2), LocatorUtils.property(thatLocator, "custom2", rhsCustom2), lhsCustom2, rhsCustom2)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            IdType theClassId;
            theClassId = this.getClassId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "classId", theClassId), currentHashCode, theClassId);
        }
        {
            String theClassName;
            theClassName = this.getClassName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "className", theClassName), currentHashCode, theClassName);
        }
        {
            IdType theSalesTermId;
            theSalesTermId = this.getSalesTermId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "salesTermId", theSalesTermId), currentHashCode, theSalesTermId);
        }
        {
            String theSalesTermName;
            theSalesTermName = this.getSalesTermName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "salesTermName", theSalesTermName), currentHashCode, theSalesTermName);
        }
        {
            Calendar theDueDate;
            theDueDate = this.getDueDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dueDate", theDueDate), currentHashCode, theDueDate);
        }
        {
            Calendar theExpectedDate;
            theExpectedDate = this.getExpectedDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "expectedDate", theExpectedDate), currentHashCode, theExpectedDate);
        }
        {
            PhysicalAddress theRemitToAddr;
            theRemitToAddr = this.getRemitToAddr();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "remitToAddr", theRemitToAddr), currentHashCode, theRemitToAddr);
        }
        {
            CustomerRef theDropShipToCustomer;
            theDropShipToCustomer = this.getDropShipToCustomer();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dropShipToCustomer", theDropShipToCustomer), currentHashCode, theDropShipToCustomer);
        }
        {
            VendorRef theDropShipToVendor;
            theDropShipToVendor = this.getDropShipToVendor();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dropShipToVendor", theDropShipToVendor), currentHashCode, theDropShipToVendor);
        }
        {
            EmployeeRef theDropShipToEmployee;
            theDropShipToEmployee = this.getDropShipToEmployee();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dropShipToEmployee", theDropShipToEmployee), currentHashCode, theDropShipToEmployee);
        }
        {
            OtherNameRef theDropShipToOtherName;
            theDropShipToOtherName = this.getDropShipToOtherName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dropShipToOtherName", theDropShipToOtherName), currentHashCode, theDropShipToOtherName);
        }
        {
            PhysicalAddress theShipAddr;
            theShipAddr = this.getShipAddr();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shipAddr", theShipAddr), currentHashCode, theShipAddr);
        }
        {
            IdType theShipMethodId;
            theShipMethodId = this.getShipMethodId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shipMethodId", theShipMethodId), currentHashCode, theShipMethodId);
        }
        {
            String theShipMethodName;
            theShipMethodName = this.getShipMethodName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shipMethodName", theShipMethodName), currentHashCode, theShipMethodName);
        }
        {
            String theFOB;
            theFOB = this.getFOB();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fob", theFOB), currentHashCode, theFOB);
        }
        {
            String thePOEmail;
            thePOEmail = this.getPOEmail();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "poEmail", thePOEmail), currentHashCode, thePOEmail);
        }
        {
            Boolean theToBePrinted;
            theToBePrinted = this.isToBePrinted();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "toBePrinted", theToBePrinted), currentHashCode, theToBePrinted);
        }
        {
            Boolean theToBeEmailed;
            theToBeEmailed = this.isToBeEmailed();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "toBeEmailed", theToBeEmailed), currentHashCode, theToBeEmailed);
        }
        {
            String theCustom1;
            theCustom1 = this.getCustom1();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "custom1", theCustom1), currentHashCode, theCustom1);
        }
        {
            String theCustom2;
            theCustom2 = this.getCustom2();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "custom2", theCustom2), currentHashCode, theCustom2);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
