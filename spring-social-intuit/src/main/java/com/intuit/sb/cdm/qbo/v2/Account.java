//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.2-hudson-jaxb-ri-2.2-63- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.05.12 at 06:01:42 PM PDT 
//


package com.intuit.sb.cdm.qbo.v2;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Calendar;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Account is a component of a Chart Of Accounts, and is part of a Ledger.  Used to record a total monetary amount allocated against a specific use.  Accounts are one of five basic types: asset, liability, revenue (income), expenses, or equity.
 * 
 * <p>Java class for Account complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Account">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.intuit.com/sb/cdm/v2}CdmBase">
 *       &lt;sequence>
 *         &lt;element name="Name" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;group ref="{http://www.intuit.com/sb/cdm/v2}AccountParentReferenceGroup" minOccurs="0"/>
 *         &lt;element name="Desc" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="Active" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="Type" type="{http://www.intuit.com/sb/cdm/v2}AccountTypeEnum" minOccurs="0"/>
 *         &lt;element name="Subtype" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="AcctNum" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="BankNum" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="RoutingNum" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="OpeningBalance" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="OpeningBalanceDate" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/>
 *         &lt;element name="CurrentBalance" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="CurrentBalanceWithSubAccounts" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Account", propOrder = {
    "name",
    "accountParentId",
    "accountParentName",
    "desc",
    "active",
    "type",
    "subtype",
    "acctNum",
    "bankNum",
    "routingNum",
    "openingBalance",
    "openingBalanceDate",
    "currentBalance",
    "currentBalanceWithSubAccounts"
})
public class Account
    extends CdmBase
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "Name")
    protected String name;
    @XmlElement(name = "AccountParentId")
    protected IdType accountParentId;
    @XmlElement(name = "AccountParentName")
    protected String accountParentName;
    @XmlElement(name = "Desc")
    protected String desc;
    @XmlElement(name = "Active")
    protected Boolean active;
    @XmlElement(name = "Type")
    protected AccountTypeEnum type;
    @XmlElement(name = "Subtype")
    protected String subtype;
    @XmlElement(name = "AcctNum")
    protected String acctNum;
    @XmlElement(name = "BankNum")
    protected String bankNum;
    @XmlElement(name = "RoutingNum")
    protected String routingNum;
    @XmlElement(name = "OpeningBalance")
    protected BigDecimal openingBalance;
    @XmlElement(name = "OpeningBalanceDate", type = String.class)
    @XmlJavaTypeAdapter(Adapter2 .class)
    @XmlSchemaType(name = "date")
    protected Calendar openingBalanceDate;
    @XmlElement(name = "CurrentBalance")
    protected BigDecimal currentBalance;
    @XmlElement(name = "CurrentBalanceWithSubAccounts")
    protected BigDecimal currentBalanceWithSubAccounts;

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the accountParentId property.
     * 
     * @return
     *     possible object is
     *     {@link IdType }
     *     
     */
    public IdType getAccountParentId() {
        return accountParentId;
    }

    /**
     * Sets the value of the accountParentId property.
     * 
     * @param value
     *     allowed object is
     *     {@link IdType }
     *     
     */
    public void setAccountParentId(IdType value) {
        this.accountParentId = value;
    }

    /**
     * Gets the value of the accountParentName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAccountParentName() {
        return accountParentName;
    }

    /**
     * Sets the value of the accountParentName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAccountParentName(String value) {
        this.accountParentName = value;
    }

    /**
     * Gets the value of the desc property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDesc() {
        return desc;
    }

    /**
     * Sets the value of the desc property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDesc(String value) {
        this.desc = value;
    }

    /**
     * Gets the value of the active property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isActive() {
        return active;
    }

    /**
     * Sets the value of the active property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setActive(Boolean value) {
        this.active = value;
    }

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link AccountTypeEnum }
     *     
     */
    public AccountTypeEnum getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link AccountTypeEnum }
     *     
     */
    public void setType(AccountTypeEnum value) {
        this.type = value;
    }

    /**
     * Gets the value of the subtype property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSubtype() {
        return subtype;
    }

    /**
     * Sets the value of the subtype property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSubtype(String value) {
        this.subtype = value;
    }

    /**
     * Gets the value of the acctNum property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAcctNum() {
        return acctNum;
    }

    /**
     * Sets the value of the acctNum property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAcctNum(String value) {
        this.acctNum = value;
    }

    /**
     * Gets the value of the bankNum property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBankNum() {
        return bankNum;
    }

    /**
     * Sets the value of the bankNum property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBankNum(String value) {
        this.bankNum = value;
    }

    /**
     * Gets the value of the routingNum property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRoutingNum() {
        return routingNum;
    }

    /**
     * Sets the value of the routingNum property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRoutingNum(String value) {
        this.routingNum = value;
    }

    /**
     * Gets the value of the openingBalance property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getOpeningBalance() {
        return openingBalance;
    }

    /**
     * Sets the value of the openingBalance property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setOpeningBalance(BigDecimal value) {
        this.openingBalance = value;
    }

    /**
     * Gets the value of the openingBalanceDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Calendar getOpeningBalanceDate() {
        return openingBalanceDate;
    }

    /**
     * Sets the value of the openingBalanceDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOpeningBalanceDate(Calendar value) {
        this.openingBalanceDate = value;
    }

    /**
     * Gets the value of the currentBalance property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getCurrentBalance() {
        return currentBalance;
    }

    /**
     * Sets the value of the currentBalance property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setCurrentBalance(BigDecimal value) {
        this.currentBalance = value;
    }

    /**
     * Gets the value of the currentBalanceWithSubAccounts property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getCurrentBalanceWithSubAccounts() {
        return currentBalanceWithSubAccounts;
    }

    /**
     * Sets the value of the currentBalanceWithSubAccounts property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setCurrentBalanceWithSubAccounts(BigDecimal value) {
        this.currentBalanceWithSubAccounts = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Account)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final Account that = ((Account) object);
        {
            String lhsName;
            lhsName = this.getName();
            String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            IdType lhsAccountParentId;
            lhsAccountParentId = this.getAccountParentId();
            IdType rhsAccountParentId;
            rhsAccountParentId = that.getAccountParentId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accountParentId", lhsAccountParentId), LocatorUtils.property(thatLocator, "accountParentId", rhsAccountParentId), lhsAccountParentId, rhsAccountParentId)) {
                return false;
            }
        }
        {
            String lhsAccountParentName;
            lhsAccountParentName = this.getAccountParentName();
            String rhsAccountParentName;
            rhsAccountParentName = that.getAccountParentName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accountParentName", lhsAccountParentName), LocatorUtils.property(thatLocator, "accountParentName", rhsAccountParentName), lhsAccountParentName, rhsAccountParentName)) {
                return false;
            }
        }
        {
            String lhsDesc;
            lhsDesc = this.getDesc();
            String rhsDesc;
            rhsDesc = that.getDesc();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc)) {
                return false;
            }
        }
        {
            Boolean lhsActive;
            lhsActive = this.isActive();
            Boolean rhsActive;
            rhsActive = that.isActive();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "active", lhsActive), LocatorUtils.property(thatLocator, "active", rhsActive), lhsActive, rhsActive)) {
                return false;
            }
        }
        {
            AccountTypeEnum lhsType;
            lhsType = this.getType();
            AccountTypeEnum rhsType;
            rhsType = that.getType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                return false;
            }
        }
        {
            String lhsSubtype;
            lhsSubtype = this.getSubtype();
            String rhsSubtype;
            rhsSubtype = that.getSubtype();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subtype", lhsSubtype), LocatorUtils.property(thatLocator, "subtype", rhsSubtype), lhsSubtype, rhsSubtype)) {
                return false;
            }
        }
        {
            String lhsAcctNum;
            lhsAcctNum = this.getAcctNum();
            String rhsAcctNum;
            rhsAcctNum = that.getAcctNum();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acctNum", lhsAcctNum), LocatorUtils.property(thatLocator, "acctNum", rhsAcctNum), lhsAcctNum, rhsAcctNum)) {
                return false;
            }
        }
        {
            String lhsBankNum;
            lhsBankNum = this.getBankNum();
            String rhsBankNum;
            rhsBankNum = that.getBankNum();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bankNum", lhsBankNum), LocatorUtils.property(thatLocator, "bankNum", rhsBankNum), lhsBankNum, rhsBankNum)) {
                return false;
            }
        }
        {
            String lhsRoutingNum;
            lhsRoutingNum = this.getRoutingNum();
            String rhsRoutingNum;
            rhsRoutingNum = that.getRoutingNum();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "routingNum", lhsRoutingNum), LocatorUtils.property(thatLocator, "routingNum", rhsRoutingNum), lhsRoutingNum, rhsRoutingNum)) {
                return false;
            }
        }
        {
            BigDecimal lhsOpeningBalance;
            lhsOpeningBalance = this.getOpeningBalance();
            BigDecimal rhsOpeningBalance;
            rhsOpeningBalance = that.getOpeningBalance();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "openingBalance", lhsOpeningBalance), LocatorUtils.property(thatLocator, "openingBalance", rhsOpeningBalance), lhsOpeningBalance, rhsOpeningBalance)) {
                return false;
            }
        }
        {
            Calendar lhsOpeningBalanceDate;
            lhsOpeningBalanceDate = this.getOpeningBalanceDate();
            Calendar rhsOpeningBalanceDate;
            rhsOpeningBalanceDate = that.getOpeningBalanceDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "openingBalanceDate", lhsOpeningBalanceDate), LocatorUtils.property(thatLocator, "openingBalanceDate", rhsOpeningBalanceDate), lhsOpeningBalanceDate, rhsOpeningBalanceDate)) {
                return false;
            }
        }
        {
            BigDecimal lhsCurrentBalance;
            lhsCurrentBalance = this.getCurrentBalance();
            BigDecimal rhsCurrentBalance;
            rhsCurrentBalance = that.getCurrentBalance();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "currentBalance", lhsCurrentBalance), LocatorUtils.property(thatLocator, "currentBalance", rhsCurrentBalance), lhsCurrentBalance, rhsCurrentBalance)) {
                return false;
            }
        }
        {
            BigDecimal lhsCurrentBalanceWithSubAccounts;
            lhsCurrentBalanceWithSubAccounts = this.getCurrentBalanceWithSubAccounts();
            BigDecimal rhsCurrentBalanceWithSubAccounts;
            rhsCurrentBalanceWithSubAccounts = that.getCurrentBalanceWithSubAccounts();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "currentBalanceWithSubAccounts", lhsCurrentBalanceWithSubAccounts), LocatorUtils.property(thatLocator, "currentBalanceWithSubAccounts", rhsCurrentBalanceWithSubAccounts), lhsCurrentBalanceWithSubAccounts, rhsCurrentBalanceWithSubAccounts)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        {
            IdType theAccountParentId;
            theAccountParentId = this.getAccountParentId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accountParentId", theAccountParentId), currentHashCode, theAccountParentId);
        }
        {
            String theAccountParentName;
            theAccountParentName = this.getAccountParentName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accountParentName", theAccountParentName), currentHashCode, theAccountParentName);
        }
        {
            String theDesc;
            theDesc = this.getDesc();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc);
        }
        {
            Boolean theActive;
            theActive = this.isActive();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "active", theActive), currentHashCode, theActive);
        }
        {
            AccountTypeEnum theType;
            theType = this.getType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
        }
        {
            String theSubtype;
            theSubtype = this.getSubtype();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subtype", theSubtype), currentHashCode, theSubtype);
        }
        {
            String theAcctNum;
            theAcctNum = this.getAcctNum();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acctNum", theAcctNum), currentHashCode, theAcctNum);
        }
        {
            String theBankNum;
            theBankNum = this.getBankNum();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bankNum", theBankNum), currentHashCode, theBankNum);
        }
        {
            String theRoutingNum;
            theRoutingNum = this.getRoutingNum();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "routingNum", theRoutingNum), currentHashCode, theRoutingNum);
        }
        {
            BigDecimal theOpeningBalance;
            theOpeningBalance = this.getOpeningBalance();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "openingBalance", theOpeningBalance), currentHashCode, theOpeningBalance);
        }
        {
            Calendar theOpeningBalanceDate;
            theOpeningBalanceDate = this.getOpeningBalanceDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "openingBalanceDate", theOpeningBalanceDate), currentHashCode, theOpeningBalanceDate);
        }
        {
            BigDecimal theCurrentBalance;
            theCurrentBalance = this.getCurrentBalance();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "currentBalance", theCurrentBalance), currentHashCode, theCurrentBalance);
        }
        {
            BigDecimal theCurrentBalanceWithSubAccounts;
            theCurrentBalanceWithSubAccounts = this.getCurrentBalanceWithSubAccounts();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "currentBalanceWithSubAccounts", theCurrentBalanceWithSubAccounts), currentHashCode, theCurrentBalanceWithSubAccounts);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
