//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.2-hudson-jaxb-ri-2.2-63- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.05.12 at 06:01:42 PM PDT 
//


package com.intuit.sb.cdm.qbo.v2;

import java.io.Serializable;
import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Information about a specific good or service for which the check is being issued.
 * 
 * <p>Java class for LinePurchase complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="LinePurchase">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.intuit.com/sb/cdm/v2}LineBase">
 *       &lt;sequence>
 *         &lt;element name="Amount" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;group ref="{http://www.intuit.com/sb/cdm/v2}ClassReferenceGroup" minOccurs="0"/>
 *         &lt;element name="ReimbursableInfo" type="{http://www.intuit.com/sb/cdm/v2}ReimbursableInfo" minOccurs="0"/>
 *         &lt;element name="BillableStatus" type="{http://www.intuit.com/sb/cdm/v2}BillableStatusEnum" minOccurs="0"/>
 *         &lt;choice minOccurs="0">
 *           &lt;sequence>
 *             &lt;group ref="{http://www.intuit.com/sb/cdm/v2}SellableItemGroup" minOccurs="0"/>
 *           &lt;/sequence>
 *           &lt;sequence>
 *             &lt;group ref="{http://www.intuit.com/sb/cdm/v2}AccountReferenceGroup"/>
 *           &lt;/sequence>
 *         &lt;/choice>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "LinePurchase", propOrder = {
    "amount",
    "classId",
    "className",
    "reimbursableInfo",
    "billableStatus",
    "itemId",
    "itemName",
    "itemType",
    "unitPrice",
    "qty",
    "uomId",
    "uomAbbrv",
    "overrideItemAccountId",
    "overrideItemAccountName",
    "accountId",
    "accountName",
    "accountType"
})
@XmlSeeAlso({
    CreditCardCreditLine.class,
    CreditCardChargeLine.class,
    BillLine.class,
    ItemReceiptLine.class,
    CashPurchaseLine.class,
    CheckLine.class,
    VendorCreditLine.class
})
public class LinePurchase
    extends LineBase
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "Amount")
    protected BigDecimal amount;
    @XmlElement(name = "ClassId")
    protected IdType classId;
    @XmlElement(name = "ClassName")
    protected String className;
    @XmlElement(name = "ReimbursableInfo")
    protected ReimbursableInfo reimbursableInfo;
    @XmlElement(name = "BillableStatus")
    protected BillableStatusEnum billableStatus;
    @XmlElement(name = "ItemId")
    protected IdType itemId;
    @XmlElement(name = "ItemName")
    protected String itemName;
    @XmlElement(name = "ItemType")
    protected ItemTypeEnum itemType;
    @XmlElement(name = "UnitPrice")
    protected BigDecimal unitPrice;
    @XmlElement(name = "Qty")
    protected BigDecimal qty;
    @XmlElement(name = "UOMId")
    protected IdType uomId;
    @XmlElement(name = "UOMAbbrv")
    protected String uomAbbrv;
    @XmlElement(name = "OverrideItemAccountId")
    protected IdType overrideItemAccountId;
    @XmlElement(name = "OverrideItemAccountName")
    protected String overrideItemAccountName;
    @XmlElement(name = "AccountId")
    protected IdType accountId;
    @XmlElement(name = "AccountName")
    protected String accountName;
    @XmlElement(name = "AccountType")
    protected AccountTypeEnum accountType;

    /**
     * Gets the value of the amount property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getAmount() {
        return amount;
    }

    /**
     * Sets the value of the amount property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setAmount(BigDecimal value) {
        this.amount = value;
    }

    /**
     * Gets the value of the classId property.
     * 
     * @return
     *     possible object is
     *     {@link IdType }
     *     
     */
    public IdType getClassId() {
        return classId;
    }

    /**
     * Sets the value of the classId property.
     * 
     * @param value
     *     allowed object is
     *     {@link IdType }
     *     
     */
    public void setClassId(IdType value) {
        this.classId = value;
    }

    /**
     * Gets the value of the className property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getClassName() {
        return className;
    }

    /**
     * Sets the value of the className property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setClassName(String value) {
        this.className = value;
    }

    /**
     * Gets the value of the reimbursableInfo property.
     * 
     * @return
     *     possible object is
     *     {@link ReimbursableInfo }
     *     
     */
    public ReimbursableInfo getReimbursableInfo() {
        return reimbursableInfo;
    }

    /**
     * Sets the value of the reimbursableInfo property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReimbursableInfo }
     *     
     */
    public void setReimbursableInfo(ReimbursableInfo value) {
        this.reimbursableInfo = value;
    }

    /**
     * Gets the value of the billableStatus property.
     * 
     * @return
     *     possible object is
     *     {@link BillableStatusEnum }
     *     
     */
    public BillableStatusEnum getBillableStatus() {
        return billableStatus;
    }

    /**
     * Sets the value of the billableStatus property.
     * 
     * @param value
     *     allowed object is
     *     {@link BillableStatusEnum }
     *     
     */
    public void setBillableStatus(BillableStatusEnum value) {
        this.billableStatus = value;
    }

    /**
     * Gets the value of the itemId property.
     * 
     * @return
     *     possible object is
     *     {@link IdType }
     *     
     */
    public IdType getItemId() {
        return itemId;
    }

    /**
     * Sets the value of the itemId property.
     * 
     * @param value
     *     allowed object is
     *     {@link IdType }
     *     
     */
    public void setItemId(IdType value) {
        this.itemId = value;
    }

    /**
     * Gets the value of the itemName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getItemName() {
        return itemName;
    }

    /**
     * Sets the value of the itemName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setItemName(String value) {
        this.itemName = value;
    }

    /**
     * Gets the value of the itemType property.
     * 
     * @return
     *     possible object is
     *     {@link ItemTypeEnum }
     *     
     */
    public ItemTypeEnum getItemType() {
        return itemType;
    }

    /**
     * Sets the value of the itemType property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemTypeEnum }
     *     
     */
    public void setItemType(ItemTypeEnum value) {
        this.itemType = value;
    }

    /**
     * Gets the value of the unitPrice property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getUnitPrice() {
        return unitPrice;
    }

    /**
     * Sets the value of the unitPrice property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setUnitPrice(BigDecimal value) {
        this.unitPrice = value;
    }

    /**
     * Gets the value of the qty property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getQty() {
        return qty;
    }

    /**
     * Sets the value of the qty property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setQty(BigDecimal value) {
        this.qty = value;
    }

    /**
     * Gets the value of the uomId property.
     * 
     * @return
     *     possible object is
     *     {@link IdType }
     *     
     */
    public IdType getUOMId() {
        return uomId;
    }

    /**
     * Sets the value of the uomId property.
     * 
     * @param value
     *     allowed object is
     *     {@link IdType }
     *     
     */
    public void setUOMId(IdType value) {
        this.uomId = value;
    }

    /**
     * Gets the value of the uomAbbrv property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUOMAbbrv() {
        return uomAbbrv;
    }

    /**
     * Sets the value of the uomAbbrv property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUOMAbbrv(String value) {
        this.uomAbbrv = value;
    }

    /**
     * Gets the value of the overrideItemAccountId property.
     * 
     * @return
     *     possible object is
     *     {@link IdType }
     *     
     */
    public IdType getOverrideItemAccountId() {
        return overrideItemAccountId;
    }

    /**
     * Sets the value of the overrideItemAccountId property.
     * 
     * @param value
     *     allowed object is
     *     {@link IdType }
     *     
     */
    public void setOverrideItemAccountId(IdType value) {
        this.overrideItemAccountId = value;
    }

    /**
     * Gets the value of the overrideItemAccountName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOverrideItemAccountName() {
        return overrideItemAccountName;
    }

    /**
     * Sets the value of the overrideItemAccountName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOverrideItemAccountName(String value) {
        this.overrideItemAccountName = value;
    }

    /**
     * Gets the value of the accountId property.
     * 
     * @return
     *     possible object is
     *     {@link IdType }
     *     
     */
    public IdType getAccountId() {
        return accountId;
    }

    /**
     * Sets the value of the accountId property.
     * 
     * @param value
     *     allowed object is
     *     {@link IdType }
     *     
     */
    public void setAccountId(IdType value) {
        this.accountId = value;
    }

    /**
     * Gets the value of the accountName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAccountName() {
        return accountName;
    }

    /**
     * Sets the value of the accountName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAccountName(String value) {
        this.accountName = value;
    }

    /**
     * Gets the value of the accountType property.
     * 
     * @return
     *     possible object is
     *     {@link AccountTypeEnum }
     *     
     */
    public AccountTypeEnum getAccountType() {
        return accountType;
    }

    /**
     * Sets the value of the accountType property.
     * 
     * @param value
     *     allowed object is
     *     {@link AccountTypeEnum }
     *     
     */
    public void setAccountType(AccountTypeEnum value) {
        this.accountType = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof LinePurchase)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final LinePurchase that = ((LinePurchase) object);
        {
            BigDecimal lhsAmount;
            lhsAmount = this.getAmount();
            BigDecimal rhsAmount;
            rhsAmount = that.getAmount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "amount", lhsAmount), LocatorUtils.property(thatLocator, "amount", rhsAmount), lhsAmount, rhsAmount)) {
                return false;
            }
        }
        {
            IdType lhsClassId;
            lhsClassId = this.getClassId();
            IdType rhsClassId;
            rhsClassId = that.getClassId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "classId", lhsClassId), LocatorUtils.property(thatLocator, "classId", rhsClassId), lhsClassId, rhsClassId)) {
                return false;
            }
        }
        {
            String lhsClassName;
            lhsClassName = this.getClassName();
            String rhsClassName;
            rhsClassName = that.getClassName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "className", lhsClassName), LocatorUtils.property(thatLocator, "className", rhsClassName), lhsClassName, rhsClassName)) {
                return false;
            }
        }
        {
            ReimbursableInfo lhsReimbursableInfo;
            lhsReimbursableInfo = this.getReimbursableInfo();
            ReimbursableInfo rhsReimbursableInfo;
            rhsReimbursableInfo = that.getReimbursableInfo();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reimbursableInfo", lhsReimbursableInfo), LocatorUtils.property(thatLocator, "reimbursableInfo", rhsReimbursableInfo), lhsReimbursableInfo, rhsReimbursableInfo)) {
                return false;
            }
        }
        {
            BillableStatusEnum lhsBillableStatus;
            lhsBillableStatus = this.getBillableStatus();
            BillableStatusEnum rhsBillableStatus;
            rhsBillableStatus = that.getBillableStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "billableStatus", lhsBillableStatus), LocatorUtils.property(thatLocator, "billableStatus", rhsBillableStatus), lhsBillableStatus, rhsBillableStatus)) {
                return false;
            }
        }
        {
            IdType lhsItemId;
            lhsItemId = this.getItemId();
            IdType rhsItemId;
            rhsItemId = that.getItemId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemId", lhsItemId), LocatorUtils.property(thatLocator, "itemId", rhsItemId), lhsItemId, rhsItemId)) {
                return false;
            }
        }
        {
            String lhsItemName;
            lhsItemName = this.getItemName();
            String rhsItemName;
            rhsItemName = that.getItemName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemName", lhsItemName), LocatorUtils.property(thatLocator, "itemName", rhsItemName), lhsItemName, rhsItemName)) {
                return false;
            }
        }
        {
            ItemTypeEnum lhsItemType;
            lhsItemType = this.getItemType();
            ItemTypeEnum rhsItemType;
            rhsItemType = that.getItemType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemType", lhsItemType), LocatorUtils.property(thatLocator, "itemType", rhsItemType), lhsItemType, rhsItemType)) {
                return false;
            }
        }
        {
            BigDecimal lhsUnitPrice;
            lhsUnitPrice = this.getUnitPrice();
            BigDecimal rhsUnitPrice;
            rhsUnitPrice = that.getUnitPrice();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "unitPrice", lhsUnitPrice), LocatorUtils.property(thatLocator, "unitPrice", rhsUnitPrice), lhsUnitPrice, rhsUnitPrice)) {
                return false;
            }
        }
        {
            BigDecimal lhsQty;
            lhsQty = this.getQty();
            BigDecimal rhsQty;
            rhsQty = that.getQty();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "qty", lhsQty), LocatorUtils.property(thatLocator, "qty", rhsQty), lhsQty, rhsQty)) {
                return false;
            }
        }
        {
            IdType lhsUOMId;
            lhsUOMId = this.getUOMId();
            IdType rhsUOMId;
            rhsUOMId = that.getUOMId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "uomId", lhsUOMId), LocatorUtils.property(thatLocator, "uomId", rhsUOMId), lhsUOMId, rhsUOMId)) {
                return false;
            }
        }
        {
            String lhsUOMAbbrv;
            lhsUOMAbbrv = this.getUOMAbbrv();
            String rhsUOMAbbrv;
            rhsUOMAbbrv = that.getUOMAbbrv();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "uomAbbrv", lhsUOMAbbrv), LocatorUtils.property(thatLocator, "uomAbbrv", rhsUOMAbbrv), lhsUOMAbbrv, rhsUOMAbbrv)) {
                return false;
            }
        }
        {
            IdType lhsOverrideItemAccountId;
            lhsOverrideItemAccountId = this.getOverrideItemAccountId();
            IdType rhsOverrideItemAccountId;
            rhsOverrideItemAccountId = that.getOverrideItemAccountId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "overrideItemAccountId", lhsOverrideItemAccountId), LocatorUtils.property(thatLocator, "overrideItemAccountId", rhsOverrideItemAccountId), lhsOverrideItemAccountId, rhsOverrideItemAccountId)) {
                return false;
            }
        }
        {
            String lhsOverrideItemAccountName;
            lhsOverrideItemAccountName = this.getOverrideItemAccountName();
            String rhsOverrideItemAccountName;
            rhsOverrideItemAccountName = that.getOverrideItemAccountName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "overrideItemAccountName", lhsOverrideItemAccountName), LocatorUtils.property(thatLocator, "overrideItemAccountName", rhsOverrideItemAccountName), lhsOverrideItemAccountName, rhsOverrideItemAccountName)) {
                return false;
            }
        }
        {
            IdType lhsAccountId;
            lhsAccountId = this.getAccountId();
            IdType rhsAccountId;
            rhsAccountId = that.getAccountId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accountId", lhsAccountId), LocatorUtils.property(thatLocator, "accountId", rhsAccountId), lhsAccountId, rhsAccountId)) {
                return false;
            }
        }
        {
            String lhsAccountName;
            lhsAccountName = this.getAccountName();
            String rhsAccountName;
            rhsAccountName = that.getAccountName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accountName", lhsAccountName), LocatorUtils.property(thatLocator, "accountName", rhsAccountName), lhsAccountName, rhsAccountName)) {
                return false;
            }
        }
        {
            AccountTypeEnum lhsAccountType;
            lhsAccountType = this.getAccountType();
            AccountTypeEnum rhsAccountType;
            rhsAccountType = that.getAccountType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accountType", lhsAccountType), LocatorUtils.property(thatLocator, "accountType", rhsAccountType), lhsAccountType, rhsAccountType)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            BigDecimal theAmount;
            theAmount = this.getAmount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "amount", theAmount), currentHashCode, theAmount);
        }
        {
            IdType theClassId;
            theClassId = this.getClassId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "classId", theClassId), currentHashCode, theClassId);
        }
        {
            String theClassName;
            theClassName = this.getClassName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "className", theClassName), currentHashCode, theClassName);
        }
        {
            ReimbursableInfo theReimbursableInfo;
            theReimbursableInfo = this.getReimbursableInfo();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reimbursableInfo", theReimbursableInfo), currentHashCode, theReimbursableInfo);
        }
        {
            BillableStatusEnum theBillableStatus;
            theBillableStatus = this.getBillableStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "billableStatus", theBillableStatus), currentHashCode, theBillableStatus);
        }
        {
            IdType theItemId;
            theItemId = this.getItemId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemId", theItemId), currentHashCode, theItemId);
        }
        {
            String theItemName;
            theItemName = this.getItemName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemName", theItemName), currentHashCode, theItemName);
        }
        {
            ItemTypeEnum theItemType;
            theItemType = this.getItemType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemType", theItemType), currentHashCode, theItemType);
        }
        {
            BigDecimal theUnitPrice;
            theUnitPrice = this.getUnitPrice();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "unitPrice", theUnitPrice), currentHashCode, theUnitPrice);
        }
        {
            BigDecimal theQty;
            theQty = this.getQty();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "qty", theQty), currentHashCode, theQty);
        }
        {
            IdType theUOMId;
            theUOMId = this.getUOMId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "uomId", theUOMId), currentHashCode, theUOMId);
        }
        {
            String theUOMAbbrv;
            theUOMAbbrv = this.getUOMAbbrv();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "uomAbbrv", theUOMAbbrv), currentHashCode, theUOMAbbrv);
        }
        {
            IdType theOverrideItemAccountId;
            theOverrideItemAccountId = this.getOverrideItemAccountId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "overrideItemAccountId", theOverrideItemAccountId), currentHashCode, theOverrideItemAccountId);
        }
        {
            String theOverrideItemAccountName;
            theOverrideItemAccountName = this.getOverrideItemAccountName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "overrideItemAccountName", theOverrideItemAccountName), currentHashCode, theOverrideItemAccountName);
        }
        {
            IdType theAccountId;
            theAccountId = this.getAccountId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accountId", theAccountId), currentHashCode, theAccountId);
        }
        {
            String theAccountName;
            theAccountName = this.getAccountName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accountName", theAccountName), currentHashCode, theAccountName);
        }
        {
            AccountTypeEnum theAccountType;
            theAccountType = this.getAccountType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accountType", theAccountType), currentHashCode, theAccountType);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
