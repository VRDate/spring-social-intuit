//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.2-hudson-jaxb-ri-2.2-63- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.05.12 at 06:01:41 PM PDT 
//


package com.intuit.sb.cdm.qbo.v2;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for ReportAccount complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ReportAccount">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="AccountName" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="AccountBalance" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="SubAccounts" type="{http://www.intuit.com/sb/cdm/qboReports}ReportAccount" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ReportAccount", namespace = "http://www.intuit.com/sb/cdm/qboReports", propOrder = {
    "accountName",
    "accountBalance",
    "subAccounts"
})
public class ReportAccount
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "AccountName", required = true)
    protected String accountName;
    @XmlElement(name = "AccountBalance", required = true)
    protected String accountBalance;
    @XmlElement(name = "SubAccounts")
    protected List<ReportAccount> subAccounts;

    /**
     * Gets the value of the accountName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAccountName() {
        return accountName;
    }

    /**
     * Sets the value of the accountName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAccountName(String value) {
        this.accountName = value;
    }

    /**
     * Gets the value of the accountBalance property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAccountBalance() {
        return accountBalance;
    }

    /**
     * Sets the value of the accountBalance property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAccountBalance(String value) {
        this.accountBalance = value;
    }

    /**
     * Gets the value of the subAccounts property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the subAccounts property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSubAccounts().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ReportAccount }
     * 
     * 
     */
    public List<ReportAccount> getSubAccounts() {
        if (subAccounts == null) {
            subAccounts = new ArrayList<ReportAccount>();
        }
        return this.subAccounts;
    }

    /**
     * Sets the value of the subAccounts property.
     * 
     * @param subAccounts
     *     allowed object is
     *     {@link ReportAccount }
     *     
     */
    public void setSubAccounts(List<ReportAccount> subAccounts) {
        this.subAccounts = subAccounts;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ReportAccount)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ReportAccount that = ((ReportAccount) object);
        {
            String lhsAccountName;
            lhsAccountName = this.getAccountName();
            String rhsAccountName;
            rhsAccountName = that.getAccountName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accountName", lhsAccountName), LocatorUtils.property(thatLocator, "accountName", rhsAccountName), lhsAccountName, rhsAccountName)) {
                return false;
            }
        }
        {
            String lhsAccountBalance;
            lhsAccountBalance = this.getAccountBalance();
            String rhsAccountBalance;
            rhsAccountBalance = that.getAccountBalance();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accountBalance", lhsAccountBalance), LocatorUtils.property(thatLocator, "accountBalance", rhsAccountBalance), lhsAccountBalance, rhsAccountBalance)) {
                return false;
            }
        }
        {
            List<ReportAccount> lhsSubAccounts;
            lhsSubAccounts = this.getSubAccounts();
            List<ReportAccount> rhsSubAccounts;
            rhsSubAccounts = that.getSubAccounts();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subAccounts", lhsSubAccounts), LocatorUtils.property(thatLocator, "subAccounts", rhsSubAccounts), lhsSubAccounts, rhsSubAccounts)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theAccountName;
            theAccountName = this.getAccountName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accountName", theAccountName), currentHashCode, theAccountName);
        }
        {
            String theAccountBalance;
            theAccountBalance = this.getAccountBalance();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accountBalance", theAccountBalance), currentHashCode, theAccountBalance);
        }
        {
            List<ReportAccount> theSubAccounts;
            theSubAccounts = this.getSubAccounts();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subAccounts", theSubAccounts), currentHashCode, theSubAccounts);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
