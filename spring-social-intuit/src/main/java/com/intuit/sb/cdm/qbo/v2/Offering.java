//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.2-hudson-jaxb-ri-2.2-63- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.05.12 at 06:01:42 PM PDT 
//


package com.intuit.sb.cdm.qbo.v2;

import java.io.Serializable;
import java.math.BigInteger;
import java.util.Calendar;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * definition of one or many offerings associated with each company
 * 
 * <p>Java class for Offering complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Offering">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="OfferingId" type="{http://www.intuit.com/sb/cdm/v2}offeringId" minOccurs="0"/>
 *         &lt;element name="OfferingName" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="ActivationDate" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/>
 *         &lt;element name="TrialExpiryDate" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/>
 *         &lt;element name="CancelationDate" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/>
 *         &lt;element name="Seats" type="{http://www.w3.org/2001/XMLSchema}positiveInteger" minOccurs="0"/>
 *         &lt;element name="SeatType" type="{http://www.intuit.com/sb/cdm/v2}seatType" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Offering", propOrder = {
    "offeringId",
    "offeringName",
    "activationDate",
    "trialExpiryDate",
    "cancelationDate",
    "seats",
    "seatType"
})
public class Offering
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "OfferingId")
    protected OfferingId offeringId;
    @XmlElement(name = "OfferingName")
    protected String offeringName;
    @XmlElement(name = "ActivationDate", type = String.class)
    @XmlJavaTypeAdapter(Adapter2 .class)
    @XmlSchemaType(name = "date")
    protected Calendar activationDate;
    @XmlElement(name = "TrialExpiryDate", type = String.class)
    @XmlJavaTypeAdapter(Adapter2 .class)
    @XmlSchemaType(name = "date")
    protected Calendar trialExpiryDate;
    @XmlElement(name = "CancelationDate", type = String.class)
    @XmlJavaTypeAdapter(Adapter2 .class)
    @XmlSchemaType(name = "date")
    protected Calendar cancelationDate;
    @XmlElement(name = "Seats")
    @XmlSchemaType(name = "positiveInteger")
    protected BigInteger seats;
    @XmlElement(name = "SeatType")
    protected SeatType seatType;

    /**
     * Gets the value of the offeringId property.
     * 
     * @return
     *     possible object is
     *     {@link OfferingId }
     *     
     */
    public OfferingId getOfferingId() {
        return offeringId;
    }

    /**
     * Sets the value of the offeringId property.
     * 
     * @param value
     *     allowed object is
     *     {@link OfferingId }
     *     
     */
    public void setOfferingId(OfferingId value) {
        this.offeringId = value;
    }

    /**
     * Gets the value of the offeringName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOfferingName() {
        return offeringName;
    }

    /**
     * Sets the value of the offeringName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOfferingName(String value) {
        this.offeringName = value;
    }

    /**
     * Gets the value of the activationDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Calendar getActivationDate() {
        return activationDate;
    }

    /**
     * Sets the value of the activationDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setActivationDate(Calendar value) {
        this.activationDate = value;
    }

    /**
     * Gets the value of the trialExpiryDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Calendar getTrialExpiryDate() {
        return trialExpiryDate;
    }

    /**
     * Sets the value of the trialExpiryDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTrialExpiryDate(Calendar value) {
        this.trialExpiryDate = value;
    }

    /**
     * Gets the value of the cancelationDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Calendar getCancelationDate() {
        return cancelationDate;
    }

    /**
     * Sets the value of the cancelationDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCancelationDate(Calendar value) {
        this.cancelationDate = value;
    }

    /**
     * Gets the value of the seats property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getSeats() {
        return seats;
    }

    /**
     * Sets the value of the seats property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setSeats(BigInteger value) {
        this.seats = value;
    }

    /**
     * Gets the value of the seatType property.
     * 
     * @return
     *     possible object is
     *     {@link SeatType }
     *     
     */
    public SeatType getSeatType() {
        return seatType;
    }

    /**
     * Sets the value of the seatType property.
     * 
     * @param value
     *     allowed object is
     *     {@link SeatType }
     *     
     */
    public void setSeatType(SeatType value) {
        this.seatType = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Offering)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Offering that = ((Offering) object);
        {
            OfferingId lhsOfferingId;
            lhsOfferingId = this.getOfferingId();
            OfferingId rhsOfferingId;
            rhsOfferingId = that.getOfferingId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "offeringId", lhsOfferingId), LocatorUtils.property(thatLocator, "offeringId", rhsOfferingId), lhsOfferingId, rhsOfferingId)) {
                return false;
            }
        }
        {
            String lhsOfferingName;
            lhsOfferingName = this.getOfferingName();
            String rhsOfferingName;
            rhsOfferingName = that.getOfferingName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "offeringName", lhsOfferingName), LocatorUtils.property(thatLocator, "offeringName", rhsOfferingName), lhsOfferingName, rhsOfferingName)) {
                return false;
            }
        }
        {
            Calendar lhsActivationDate;
            lhsActivationDate = this.getActivationDate();
            Calendar rhsActivationDate;
            rhsActivationDate = that.getActivationDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "activationDate", lhsActivationDate), LocatorUtils.property(thatLocator, "activationDate", rhsActivationDate), lhsActivationDate, rhsActivationDate)) {
                return false;
            }
        }
        {
            Calendar lhsTrialExpiryDate;
            lhsTrialExpiryDate = this.getTrialExpiryDate();
            Calendar rhsTrialExpiryDate;
            rhsTrialExpiryDate = that.getTrialExpiryDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "trialExpiryDate", lhsTrialExpiryDate), LocatorUtils.property(thatLocator, "trialExpiryDate", rhsTrialExpiryDate), lhsTrialExpiryDate, rhsTrialExpiryDate)) {
                return false;
            }
        }
        {
            Calendar lhsCancelationDate;
            lhsCancelationDate = this.getCancelationDate();
            Calendar rhsCancelationDate;
            rhsCancelationDate = that.getCancelationDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cancelationDate", lhsCancelationDate), LocatorUtils.property(thatLocator, "cancelationDate", rhsCancelationDate), lhsCancelationDate, rhsCancelationDate)) {
                return false;
            }
        }
        {
            BigInteger lhsSeats;
            lhsSeats = this.getSeats();
            BigInteger rhsSeats;
            rhsSeats = that.getSeats();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "seats", lhsSeats), LocatorUtils.property(thatLocator, "seats", rhsSeats), lhsSeats, rhsSeats)) {
                return false;
            }
        }
        {
            SeatType lhsSeatType;
            lhsSeatType = this.getSeatType();
            SeatType rhsSeatType;
            rhsSeatType = that.getSeatType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "seatType", lhsSeatType), LocatorUtils.property(thatLocator, "seatType", rhsSeatType), lhsSeatType, rhsSeatType)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            OfferingId theOfferingId;
            theOfferingId = this.getOfferingId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "offeringId", theOfferingId), currentHashCode, theOfferingId);
        }
        {
            String theOfferingName;
            theOfferingName = this.getOfferingName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "offeringName", theOfferingName), currentHashCode, theOfferingName);
        }
        {
            Calendar theActivationDate;
            theActivationDate = this.getActivationDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "activationDate", theActivationDate), currentHashCode, theActivationDate);
        }
        {
            Calendar theTrialExpiryDate;
            theTrialExpiryDate = this.getTrialExpiryDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "trialExpiryDate", theTrialExpiryDate), currentHashCode, theTrialExpiryDate);
        }
        {
            Calendar theCancelationDate;
            theCancelationDate = this.getCancelationDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cancelationDate", theCancelationDate), currentHashCode, theCancelationDate);
        }
        {
            BigInteger theSeats;
            theSeats = this.getSeats();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "seats", theSeats), currentHashCode, theSeats);
        }
        {
            SeatType theSeatType;
            theSeatType = this.getSeatType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "seatType", theSeatType), currentHashCode, theSeatType);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
