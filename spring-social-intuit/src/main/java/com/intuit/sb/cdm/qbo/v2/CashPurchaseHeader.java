//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.2-hudson-jaxb-ri-2.2-63- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.05.12 at 06:01:42 PM PDT 
//


package com.intuit.sb.cdm.qbo.v2;

import java.io.Serializable;
import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Financial Transaction information that pertains to the entire Cash Purchase transaction.
 * 
 * <p>Java class for CashPurchaseHeader complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CashPurchaseHeader">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.intuit.com/sb/cdm/v2}HeaderBase">
 *       &lt;sequence>
 *         &lt;group ref="{http://www.intuit.com/sb/cdm/v2}CashAccountReferenceGroup" minOccurs="0"/>
 *         &lt;group ref="{http://www.intuit.com/sb/cdm/v2}EntityReferenceGroup" minOccurs="0"/>
 *         &lt;element name="PayeeAddr" type="{http://www.intuit.com/sb/cdm/v2}PhysicalAddress" minOccurs="0"/>
 *         &lt;element name="TotalAmt" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;group ref="{http://www.intuit.com/sb/cdm/v2}TxnReferenceGroup" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CashPurchaseHeader", propOrder = {
    "cashAccountId",
    "cashAccountName",
    "entityId",
    "entityName",
    "entityType",
    "payeeAddr",
    "totalAmt",
    "txnId",
    "txnNum"
})
public class CashPurchaseHeader
    extends HeaderBase
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "CashAccountId")
    protected IdType cashAccountId;
    @XmlElement(name = "CashAccountName")
    protected String cashAccountName;
    @XmlElement(name = "EntityId")
    protected IdType entityId;
    @XmlElement(name = "EntityName")
    protected String entityName;
    @XmlElement(name = "EntityType")
    protected EntityTypeEnum entityType;
    @XmlElement(name = "PayeeAddr")
    protected PhysicalAddress payeeAddr;
    @XmlElement(name = "TotalAmt")
    protected BigDecimal totalAmt;
    @XmlElement(name = "TxnId")
    protected IdType txnId;
    @XmlElement(name = "TxnNum")
    protected String txnNum;

    /**
     * Gets the value of the cashAccountId property.
     * 
     * @return
     *     possible object is
     *     {@link IdType }
     *     
     */
    public IdType getCashAccountId() {
        return cashAccountId;
    }

    /**
     * Sets the value of the cashAccountId property.
     * 
     * @param value
     *     allowed object is
     *     {@link IdType }
     *     
     */
    public void setCashAccountId(IdType value) {
        this.cashAccountId = value;
    }

    /**
     * Gets the value of the cashAccountName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCashAccountName() {
        return cashAccountName;
    }

    /**
     * Sets the value of the cashAccountName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCashAccountName(String value) {
        this.cashAccountName = value;
    }

    /**
     * Gets the value of the entityId property.
     * 
     * @return
     *     possible object is
     *     {@link IdType }
     *     
     */
    public IdType getEntityId() {
        return entityId;
    }

    /**
     * Sets the value of the entityId property.
     * 
     * @param value
     *     allowed object is
     *     {@link IdType }
     *     
     */
    public void setEntityId(IdType value) {
        this.entityId = value;
    }

    /**
     * Gets the value of the entityName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEntityName() {
        return entityName;
    }

    /**
     * Sets the value of the entityName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEntityName(String value) {
        this.entityName = value;
    }

    /**
     * Gets the value of the entityType property.
     * 
     * @return
     *     possible object is
     *     {@link EntityTypeEnum }
     *     
     */
    public EntityTypeEnum getEntityType() {
        return entityType;
    }

    /**
     * Sets the value of the entityType property.
     * 
     * @param value
     *     allowed object is
     *     {@link EntityTypeEnum }
     *     
     */
    public void setEntityType(EntityTypeEnum value) {
        this.entityType = value;
    }

    /**
     * Gets the value of the payeeAddr property.
     * 
     * @return
     *     possible object is
     *     {@link PhysicalAddress }
     *     
     */
    public PhysicalAddress getPayeeAddr() {
        return payeeAddr;
    }

    /**
     * Sets the value of the payeeAddr property.
     * 
     * @param value
     *     allowed object is
     *     {@link PhysicalAddress }
     *     
     */
    public void setPayeeAddr(PhysicalAddress value) {
        this.payeeAddr = value;
    }

    /**
     * Gets the value of the totalAmt property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getTotalAmt() {
        return totalAmt;
    }

    /**
     * Sets the value of the totalAmt property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTotalAmt(BigDecimal value) {
        this.totalAmt = value;
    }

    /**
     * Gets the value of the txnId property.
     * 
     * @return
     *     possible object is
     *     {@link IdType }
     *     
     */
    public IdType getTxnId() {
        return txnId;
    }

    /**
     * Sets the value of the txnId property.
     * 
     * @param value
     *     allowed object is
     *     {@link IdType }
     *     
     */
    public void setTxnId(IdType value) {
        this.txnId = value;
    }

    /**
     * Gets the value of the txnNum property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTxnNum() {
        return txnNum;
    }

    /**
     * Sets the value of the txnNum property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTxnNum(String value) {
        this.txnNum = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CashPurchaseHeader)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final CashPurchaseHeader that = ((CashPurchaseHeader) object);
        {
            IdType lhsCashAccountId;
            lhsCashAccountId = this.getCashAccountId();
            IdType rhsCashAccountId;
            rhsCashAccountId = that.getCashAccountId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cashAccountId", lhsCashAccountId), LocatorUtils.property(thatLocator, "cashAccountId", rhsCashAccountId), lhsCashAccountId, rhsCashAccountId)) {
                return false;
            }
        }
        {
            String lhsCashAccountName;
            lhsCashAccountName = this.getCashAccountName();
            String rhsCashAccountName;
            rhsCashAccountName = that.getCashAccountName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cashAccountName", lhsCashAccountName), LocatorUtils.property(thatLocator, "cashAccountName", rhsCashAccountName), lhsCashAccountName, rhsCashAccountName)) {
                return false;
            }
        }
        {
            IdType lhsEntityId;
            lhsEntityId = this.getEntityId();
            IdType rhsEntityId;
            rhsEntityId = that.getEntityId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "entityId", lhsEntityId), LocatorUtils.property(thatLocator, "entityId", rhsEntityId), lhsEntityId, rhsEntityId)) {
                return false;
            }
        }
        {
            String lhsEntityName;
            lhsEntityName = this.getEntityName();
            String rhsEntityName;
            rhsEntityName = that.getEntityName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "entityName", lhsEntityName), LocatorUtils.property(thatLocator, "entityName", rhsEntityName), lhsEntityName, rhsEntityName)) {
                return false;
            }
        }
        {
            EntityTypeEnum lhsEntityType;
            lhsEntityType = this.getEntityType();
            EntityTypeEnum rhsEntityType;
            rhsEntityType = that.getEntityType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "entityType", lhsEntityType), LocatorUtils.property(thatLocator, "entityType", rhsEntityType), lhsEntityType, rhsEntityType)) {
                return false;
            }
        }
        {
            PhysicalAddress lhsPayeeAddr;
            lhsPayeeAddr = this.getPayeeAddr();
            PhysicalAddress rhsPayeeAddr;
            rhsPayeeAddr = that.getPayeeAddr();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "payeeAddr", lhsPayeeAddr), LocatorUtils.property(thatLocator, "payeeAddr", rhsPayeeAddr), lhsPayeeAddr, rhsPayeeAddr)) {
                return false;
            }
        }
        {
            BigDecimal lhsTotalAmt;
            lhsTotalAmt = this.getTotalAmt();
            BigDecimal rhsTotalAmt;
            rhsTotalAmt = that.getTotalAmt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "totalAmt", lhsTotalAmt), LocatorUtils.property(thatLocator, "totalAmt", rhsTotalAmt), lhsTotalAmt, rhsTotalAmt)) {
                return false;
            }
        }
        {
            IdType lhsTxnId;
            lhsTxnId = this.getTxnId();
            IdType rhsTxnId;
            rhsTxnId = that.getTxnId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "txnId", lhsTxnId), LocatorUtils.property(thatLocator, "txnId", rhsTxnId), lhsTxnId, rhsTxnId)) {
                return false;
            }
        }
        {
            String lhsTxnNum;
            lhsTxnNum = this.getTxnNum();
            String rhsTxnNum;
            rhsTxnNum = that.getTxnNum();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "txnNum", lhsTxnNum), LocatorUtils.property(thatLocator, "txnNum", rhsTxnNum), lhsTxnNum, rhsTxnNum)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            IdType theCashAccountId;
            theCashAccountId = this.getCashAccountId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cashAccountId", theCashAccountId), currentHashCode, theCashAccountId);
        }
        {
            String theCashAccountName;
            theCashAccountName = this.getCashAccountName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cashAccountName", theCashAccountName), currentHashCode, theCashAccountName);
        }
        {
            IdType theEntityId;
            theEntityId = this.getEntityId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "entityId", theEntityId), currentHashCode, theEntityId);
        }
        {
            String theEntityName;
            theEntityName = this.getEntityName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "entityName", theEntityName), currentHashCode, theEntityName);
        }
        {
            EntityTypeEnum theEntityType;
            theEntityType = this.getEntityType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "entityType", theEntityType), currentHashCode, theEntityType);
        }
        {
            PhysicalAddress thePayeeAddr;
            thePayeeAddr = this.getPayeeAddr();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "payeeAddr", thePayeeAddr), currentHashCode, thePayeeAddr);
        }
        {
            BigDecimal theTotalAmt;
            theTotalAmt = this.getTotalAmt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "totalAmt", theTotalAmt), currentHashCode, theTotalAmt);
        }
        {
            IdType theTxnId;
            theTxnId = this.getTxnId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "txnId", theTxnId), currentHashCode, theTxnId);
        }
        {
            String theTxnNum;
            theTxnNum = this.getTxnNum();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "txnNum", theTxnNum), currentHashCode, theTxnNum);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
