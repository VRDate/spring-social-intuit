//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.2-hudson-jaxb-ri-2.2-63- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.05.12 at 06:01:42 PM PDT 
//


package com.intuit.sb.cdm.qbo.v2;

import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Details about a payment received, choosing and detailing a payment method (check,credit card, etc...)
 * 
 * <p>Java class for PaymentDetail complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PaymentDetail">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice>
 *         &lt;element name="Cash" type="{http://www.intuit.com/sb/cdm/v2}CashPayment" minOccurs="0"/>
 *         &lt;element name="CreditCard" type="{http://www.intuit.com/sb/cdm/v2}CreditCardPayment" minOccurs="0"/>
 *         &lt;element name="Check" type="{http://www.intuit.com/sb/cdm/v2}CheckPayment" minOccurs="0"/>
 *       &lt;/choice>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PaymentDetail", propOrder = {
    "cash",
    "creditCard",
    "check"
})
public class PaymentDetail
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "Cash")
    protected CashPayment cash;
    @XmlElement(name = "CreditCard")
    protected CreditCardPayment creditCard;
    @XmlElement(name = "Check")
    protected CheckPayment check;

    /**
     * Gets the value of the cash property.
     * 
     * @return
     *     possible object is
     *     {@link CashPayment }
     *     
     */
    public CashPayment getCash() {
        return cash;
    }

    /**
     * Sets the value of the cash property.
     * 
     * @param value
     *     allowed object is
     *     {@link CashPayment }
     *     
     */
    public void setCash(CashPayment value) {
        this.cash = value;
    }

    /**
     * Gets the value of the creditCard property.
     * 
     * @return
     *     possible object is
     *     {@link CreditCardPayment }
     *     
     */
    public CreditCardPayment getCreditCard() {
        return creditCard;
    }

    /**
     * Sets the value of the creditCard property.
     * 
     * @param value
     *     allowed object is
     *     {@link CreditCardPayment }
     *     
     */
    public void setCreditCard(CreditCardPayment value) {
        this.creditCard = value;
    }

    /**
     * Gets the value of the check property.
     * 
     * @return
     *     possible object is
     *     {@link CheckPayment }
     *     
     */
    public CheckPayment getCheck() {
        return check;
    }

    /**
     * Sets the value of the check property.
     * 
     * @param value
     *     allowed object is
     *     {@link CheckPayment }
     *     
     */
    public void setCheck(CheckPayment value) {
        this.check = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof PaymentDetail)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final PaymentDetail that = ((PaymentDetail) object);
        {
            CashPayment lhsCash;
            lhsCash = this.getCash();
            CashPayment rhsCash;
            rhsCash = that.getCash();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cash", lhsCash), LocatorUtils.property(thatLocator, "cash", rhsCash), lhsCash, rhsCash)) {
                return false;
            }
        }
        {
            CreditCardPayment lhsCreditCard;
            lhsCreditCard = this.getCreditCard();
            CreditCardPayment rhsCreditCard;
            rhsCreditCard = that.getCreditCard();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "creditCard", lhsCreditCard), LocatorUtils.property(thatLocator, "creditCard", rhsCreditCard), lhsCreditCard, rhsCreditCard)) {
                return false;
            }
        }
        {
            CheckPayment lhsCheck;
            lhsCheck = this.getCheck();
            CheckPayment rhsCheck;
            rhsCheck = that.getCheck();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "check", lhsCheck), LocatorUtils.property(thatLocator, "check", rhsCheck), lhsCheck, rhsCheck)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            CashPayment theCash;
            theCash = this.getCash();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cash", theCash), currentHashCode, theCash);
        }
        {
            CreditCardPayment theCreditCard;
            theCreditCard = this.getCreditCard();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "creditCard", theCreditCard), currentHashCode, theCreditCard);
        }
        {
            CheckPayment theCheck;
            theCheck = this.getCheck();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "check", theCheck), currentHashCode, theCheck);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
